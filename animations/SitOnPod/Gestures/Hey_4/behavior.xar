<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="6" localization="8" tooltip="style:&#x0A;happy; fun&#x0A;tags:&#x0A;yoo-hoo; hey; call; hello; hi" x="167" y="113">
        <bitmap>media/images/box/movement/sit.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = self.getTimeline().getFPS()
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        self.getTimeline().setFPS(newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
        <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="81">
            <BehaviorLayer name="LED">
                <BehaviorKeyframe name="keyframe18" index="18">
                    <Diagram>
                        <Box name="Blink" id="2" localization="8" tooltip="tags:&#x0A;LED" x="110" y="42">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe66" index="66">
                    <Diagram>
                        <Box name="Blink" id="2" localization="8" tooltip="tags:&#x0A;LED" x="131" y="38">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList model="Nao">
                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                    <Key frame="20" value="27.1011" />
                    <Key frame="37" value="11.6321" />
                    <Key frame="54" value="7.41336" />
                    <Key frame="67" value="13.239" />
                    <Key frame="81" value="9.34696" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                    <Key frame="19" value="86.8346" />
                    <Key frame="36" value="119.5" />
                    <Key frame="52" value="119.5" />
                    <Key frame="80" value="117.245" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                    <Key frame="19" value="24.871" />
                    <Key frame="36" value="40.252" />
                    <Key frame="52" value="40.252" />
                    <Key frame="80" value="18.4549" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                    <Key frame="19" value="-87.2789" />
                    <Key frame="36" value="-81.7417" />
                    <Key frame="52" value="-81.7417" />
                    <Key frame="80" value="-111.449" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                    <Key frame="19" value="-87.5378" />
                    <Key frame="36" value="-88.5" />
                    <Key frame="52" value="-88.5" />
                    <Key frame="80" value="-86.9225" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                    <Key frame="19" value="24.0799" />
                    <Key frame="36" value="-7.73688" />
                    <Key frame="52" value="-7.73688" />
                    <Key frame="80" value="10.8083" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                    <Key frame="19" value="0.2416" />
                    <Key frame="36" value="0.2388" />
                    <Key frame="52" value="0.2388" />
                    <Key frame="80" value="0.4876" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                    <Key frame="17" value="1.40867" />
                    <Key frame="34" value="-27.3319" />
                    <Key frame="51" value="1.49656" />
                    <Key frame="67" value="78.3" />
                    <Key frame="78" value="114.789" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                    <Key frame="17" value="-1.40867" />
                    <Key frame="34" value="-23.3816" />
                    <Key frame="51" value="-43.5967" />
                    <Key frame="78" value="-11.0768" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                    <Key frame="17" value="-12.3951" />
                    <Key frame="34" value="70.0473" />
                    <Key frame="51" value="119.496" />
                    <Key frame="78" value="115.839" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                    <Key frame="17" value="79.5444" />
                    <Key frame="34" value="69.9642" />
                    <Key frame="51" value="56.5168" />
                    <Key frame="67" value="74.3" />
                    <Key frame="78" value="83.3238" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                    <Key frame="17" value="30.5839" />
                    <Key frame="34" value="-49" />
                    <Key frame="51" value="-48.0792" />
                    <Key frame="78" value="-17.7565" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                    <Key frame="17" value="0.545455" />
                    <Key frame="34" value="0.818182" />
                    <Key frame="51" value="0.819296" />
                    <Key frame="78" value="0.7244" />
                </ActuatorCurve>
            </ActuatorList>
        </Timeline>
        <Resource name="Sitting on chair" type="Lock" timeout="2" />
        <Resource name="HeadPitch" type="Lock" timeout="2" />
        <Resource name="Arms" type="Lock" timeout="2" />
        <Resource name="Legs" type="Lock" timeout="2" />
    </Box>
</ChoregrapheProject>
