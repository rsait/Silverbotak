<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" robot="" id="1" tooltip="tags:&#x0A;auto format; joke" bitmap_expanded="1" plugin="" x="373" y="145">
        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.oldfps = self.getTimeline().getFPS()
        pass

    def onUnload(self):
        self.getTimeline().setFPS(self.oldfps)
        pass

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        self.getTimeline().setFPS(newfps)
        pass

    def onInput_onStop(self):
        onUnload()
        pass]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
        <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
        <Timeline fps="25" resources_acquisition="0" size="800" enable="1" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="LED" mute="0">
                <BehaviorKeyframe name="on" index="1" bitmap="">
                    <Diagram scale="-1">
                        <Box name="stop" robot="" id="1" tooltip="stop" bitmap_expanded="1" plugin="" x="145" y="53">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        rDuration = 0.5;
        ALLeds.fadeRGB( "AllLeds", 0xffffff, rDuration );

        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="blink" index="68" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="blink" bitmap_expanded="1" plugin="" x="103" y="45">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="stop" index="327" bitmap="">
                    <Diagram scale="-1">
                        <Box name="stop" robot="" id="1" tooltip="stop" bitmap_expanded="1" plugin="" x="145" y="53">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        rDuration = 2;
        ALLeds.fadeRGB( "AllLeds", 0x000000, rDuration );

        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="on2" index="437" bitmap="">
                    <Diagram scale="-1">
                        <Box name="stop" robot="" id="1" tooltip="stop" bitmap_expanded="1" plugin="" x="145" y="53">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        rDuration = 1.5;
        ALLeds.fadeRGB( "AllLeds", 0xffffff, rDuration );

        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <BehaviorLayer name="speech" mute="0">
                <BehaviorKeyframe name="confirm" index="56" bitmap="">
                    <Diagram scale="-1">
                        <Box name="Say" robot="" id="1" tooltip="Say some text. Note that you must open the box to enter the text." bitmap_expanded="1" plugin="" x="86" y="20">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="85" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Say Text" robot="" id="2" tooltip="Say the text set in parameters." bitmap_expanded="1" plugin="" x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" robot="" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." bitmap_expanded="1" plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sChinese = ""
		sEnglish = "Are you sure you want to format the hard drive? To continue, press one time on the right bumper."
		sFrench = "Êtes-vous sûr de vouloir formater le disque dur? Pour continuer, appuyez une fois sur le beumper droit."
		sGerman = ""
		sItalian = ""
		sJapanese = ""
		sKorean = ""
		sPortuguese = ""
		sSpanish = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese />
                                                    <english>Are you sure you want to format the hard drive? To continue, press one time on the right bumper.</english>
                                                    <french>Êtes-vous sûr de vouloir formater le disque dur? Pour continuer, appuyez une fois sur le beumper droit.</french>
                                                    <german />
                                                    <italian />
                                                    <japanese />
                                                    <korean />
                                                    <portuguese />
                                                    <spanish />
                                                    <language>0</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="format" index="294" bitmap="">
                    <Diagram scale="-1">
                        <Box name="Say" robot="" id="2" tooltip="Say some text. Note that you must open the box to enter the text." bitmap_expanded="1" plugin="" x="137" y="34">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="85" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Say Text" robot="" id="2" tooltip="Say the text set in parameters." bitmap_expanded="1" plugin="" x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" robot="" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." bitmap_expanded="1" plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sChinese = ""
		sEnglish = "Formatting in progress."
		sFrench = "Formatage en cours."
		sGerman = ""
		sItalian = ""
		sJapanese = ""
		sKorean = ""
		sPortuguese = ""
		sSpanish = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese />
                                                    <english>Formatting in progress.</english>
                                                    <french>Formatage en cours.</french>
                                                    <german />
                                                    <italian />
                                                    <japanese />
                                                    <korean />
                                                    <portuguese />
                                                    <spanish />
                                                    <language>0</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <BehaviorLayer name="Fx" mute="0">
                <BehaviorKeyframe name="keyframe327" index="327" bitmap="">
                    <Diagram scale="-1">
                        <Box name="Play Sound" robot="" id="1" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." bitmap_expanded="1" plugin="" x="117" y="43">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/shutdown.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Play Sound File" robot="" id="2" tooltip="Play the sound." bitmap_expanded="1" plugin="" x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" robot="" id="1" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." bitmap_expanded="1" plugin="" x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList>
                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="27" value="-3.2544" />
                    <Key frame="42" value="-20.7449" />
                    <Key frame="51" value="-26.1941" />
                    <Key frame="66" value="-18.8112" />
                    <Key frame="79" value="-14.4166" />
                    <Key frame="147" value="-20.1296" />
                    <Key frame="223" value="-16.0866" />
                    <Key frame="236" value="-16.1745" />
                    <Key frame="249" value="-25.7547" />
                    <Key frame="261" value="-26.8973" />
                    <Key frame="274" value="-28.2156" />
                    <Key frame="285" value="-28.1278" />
                    <Key frame="298" value="-21.0964" />
                    <Key frame="330" value="-20.5691" />
                    <Key frame="358" value="5.35899" />
                    <Key frame="382" value="-2.55126" />
                    <Key frame="456" value="-2.90283" />
                    <Key frame="473" value="-5.71537" />
                    <Key frame="516" value="-2.11181" />
                    <Key frame="553" value="-2.11181" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="27" value="13.7966" />
                    <Key frame="42" value="-12.1315" />
                    <Key frame="51" value="4.56797" />
                    <Key frame="66" value="-4.39699" />
                    <Key frame="79" value="-8.44001" />
                    <Key frame="147" value="9.57779" />
                    <Key frame="223" value="-7.73688" />
                    <Key frame="236" value="-17.6686" />
                    <Key frame="249" value="16.5212" />
                    <Key frame="261" value="5.79845" />
                    <Key frame="274" value="9.92936" />
                    <Key frame="285" value="10.8962" />
                    <Key frame="298" value="-4.83645" />
                    <Key frame="330" value="-15.5592" />
                    <Key frame="358" value="-17" />
                    <Key frame="382" value="29.5" />
                    <Key frame="456" value="29.5" />
                    <Key frame="473" value="-32.6102" />
                    <Key frame="516" value="-38.5" />
                    <Key frame="553" value="-2.02391" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="25" value="50.5353" />
                    <Key frame="33" value="34.4" />
                    <Key frame="40" value="39.461" />
                    <Key frame="49" value="36.8242" />
                    <Key frame="64" value="44.9982" />
                    <Key frame="77" value="48.9533" />
                    <Key frame="145" value="46.6681" />
                    <Key frame="221" value="51.2385" />
                    <Key frame="234" value="39.3731" />
                    <Key frame="247" value="39.1094" />
                    <Key frame="268" value="38.7578" />
                    <Key frame="283" value="38.8457" />
                    <Key frame="296" value="44.0313" />
                    <Key frame="328" value="48.6896" />
                    <Key frame="356" value="35.0664" />
                    <Key frame="380" value="30.0566" />
                    <Key frame="454" value="28.1229" />
                    <Key frame="471" value="28.2987" />
                    <Key frame="514" value="27.5956" />
                    <Key frame="531" value="19.4" />
                    <Key frame="551" value="51.0627" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="25" value="1.75543" />
                    <Key frame="40" value="21.0037" />
                    <Key frame="49" value="18.0154" />
                    <Key frame="64" value="17.8396" />
                    <Key frame="77" value="17.9275" />
                    <Key frame="145" value="15.2908" />
                    <Key frame="221" value="12.654" />
                    <Key frame="234" value="12.0388" />
                    <Key frame="247" value="16.2576" />
                    <Key frame="268" value="17.5759" />
                    <Key frame="283" value="16.697" />
                    <Key frame="296" value="21.0916" />
                    <Key frame="328" value="24.9588" />
                    <Key frame="356" value="7.55628" />
                    <Key frame="380" value="-4.22121" />
                    <Key frame="454" value="-4.83645" />
                    <Key frame="471" value="-3.51807" />
                    <Key frame="514" value="-3.43018" />
                    <Key frame="551" value="10.5446" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="25" value="-56.341" />
                    <Key frame="40" value="-28.6551" />
                    <Key frame="49" value="-31.1161" />
                    <Key frame="64" value="-47.9913" />
                    <Key frame="77" value="-43.4209" />
                    <Key frame="145" value="-40.1689" />
                    <Key frame="221" value="-53.6164" />
                    <Key frame="234" value="-48.6065" />
                    <Key frame="247" value="-35.5986" />
                    <Key frame="268" value="-36.2138" />
                    <Key frame="283" value="-34.456" />
                    <Key frame="296" value="-41.3994" />
                    <Key frame="328" value="-43.0693" />
                    <Key frame="356" value="-25.2273" />
                    <Key frame="380" value="-20.5691" />
                    <Key frame="454" value="-19.4265" />
                    <Key frame="471" value="-20.0417" />
                    <Key frame="514" value="-20.8327" />
                    <Key frame="551" value="-24.7879" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="25" value="-46.9318" />
                    <Key frame="40" value="-62.5765" />
                    <Key frame="49" value="-76.1118" />
                    <Key frame="64" value="-66.6195" />
                    <Key frame="77" value="-67.059" />
                    <Key frame="145" value="-58.1819" />
                    <Key frame="221" value="-58.6214" />
                    <Key frame="234" value="-35.5059" />
                    <Key frame="247" value="-53.26" />
                    <Key frame="268" value="-43.0645" />
                    <Key frame="283" value="-49.0412" />
                    <Key frame="296" value="-66.7953" />
                    <Key frame="328" value="-64.5101" />
                    <Key frame="356" value="-50.6232" />
                    <Key frame="380" value="-37.4395" />
                    <Key frame="454" value="-35.6816" />
                    <Key frame="471" value="-34.6269" />
                    <Key frame="514" value="-34.1875" />
                    <Key frame="551" value="-70.8383" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="25" value="-11.5162" />
                    <Key frame="40" value="-11.6041" />
                    <Key frame="49" value="-11.5162" />
                    <Key frame="64" value="-11.5162" />
                    <Key frame="77" value="-11.5162" />
                    <Key frame="145" value="-11.5162" />
                    <Key frame="221" value="-11.4283" />
                    <Key frame="234" value="-11.4283" />
                    <Key frame="247" value="-11.2525" />
                    <Key frame="296" value="-11.3404" />
                    <Key frame="328" value="-11.4283" />
                    <Key frame="356" value="-11.3404" />
                    <Key frame="380" value="-11.3404" />
                    <Key frame="454" value="-11.5162" />
                    <Key frame="471" value="-11.5162" />
                    <Key frame="514" value="-11.5162" />
                    <Key frame="551" value="4.04062" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="25" value="0.594207" />
                    <Key frame="40" value="0.594207" />
                    <Key frame="49" value="0.218182" />
                    <Key frame="64" value="0.212389" />
                    <Key frame="77" value="0.213116" />
                    <Key frame="145" value="0.212025" />
                    <Key frame="221" value="0.212025" />
                    <Key frame="234" value="0.207298" />
                    <Key frame="247" value="0.207298" />
                    <Key frame="296" value="0.203662" />
                    <Key frame="328" value="0.205116" />
                    <Key frame="356" value="0.20548" />
                    <Key frame="380" value="0.20548" />
                    <Key frame="454" value="0.200025" />
                    <Key frame="471" value="0.200753" />
                    <Key frame="514" value="0.200753" />
                    <Key frame="551" value="0.3004" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="23" value="50.1007" />
                    <Key frame="38" value="-16.8728" />
                    <Key frame="47" value="-1.5" />
                    <Key frame="62" value="9.23104" />
                    <Key frame="75" value="40.9599" />
                    <Key frame="143" value="40.5205" />
                    <Key frame="219" value="47.4639" />
                    <Key frame="232" value="-7.64418" />
                    <Key frame="245" value="6" />
                    <Key frame="253" value="2.90283" />
                    <Key frame="257" value="14.9" />
                    <Key frame="266" value="5.3638" />
                    <Key frame="270" value="12" />
                    <Key frame="276" value="3.2544" />
                    <Key frame="281" value="12" />
                    <Key frame="294" value="15.6471" />
                    <Key frame="326" value="8.35212" />
                    <Key frame="354" value="1.0571" />
                    <Key frame="378" value="25.7547" />
                    <Key frame="452" value="25.8426" />
                    <Key frame="469" value="25.6668" />
                    <Key frame="512" value="25.2273" />
                    <Key frame="529" value="17.9" />
                    <Key frame="549" value="52.8253" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="23" value="-7.20953" />
                    <Key frame="38" value="-18.987" />
                    <Key frame="47" value="-19.3386" />
                    <Key frame="62" value="-20.0417" />
                    <Key frame="75" value="-10.0221" />
                    <Key frame="143" value="-13.5377" />
                    <Key frame="219" value="-12.3072" />
                    <Key frame="232" value="-20.2175" />
                    <Key frame="245" value="-19.2507" />
                    <Key frame="253" value="-25.3152" />
                    <Key frame="257" value="-22.7664" />
                    <Key frame="266" value="-24.8758" />
                    <Key frame="270" value="-19.3386" />
                    <Key frame="276" value="-20.3054" />
                    <Key frame="281" value="-22.3269" />
                    <Key frame="294" value="-22.5027" />
                    <Key frame="326" value="-19.3386" />
                    <Key frame="354" value="-5.01223" />
                    <Key frame="378" value="5.09532" />
                    <Key frame="452" value="5.09532" />
                    <Key frame="469" value="4.04062" />
                    <Key frame="512" value="4.2164" />
                    <Key frame="549" value="-13.9772" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="23" value="46.4044" />
                    <Key frame="38" value="67.4106" />
                    <Key frame="47" value="62.137" />
                    <Key frame="62" value="53.7873" />
                    <Key frame="75" value="41.3946" />
                    <Key frame="143" value="17.9275" />
                    <Key frame="219" value="20.4764" />
                    <Key frame="232" value="72.5083" />
                    <Key frame="245" value="67.6742" />
                    <Key frame="253" value="88.7682" />
                    <Key frame="257" value="78.0454" />
                    <Key frame="266" value="103.534" />
                    <Key frame="270" value="89.3835" />
                    <Key frame="276" value="82.8795" />
                    <Key frame="281" value="80.1548" />
                    <Key frame="294" value="55.0178" />
                    <Key frame="326" value="45.8771" />
                    <Key frame="354" value="58.9729" />
                    <Key frame="378" value="14.2361" />
                    <Key frame="452" value="5.88634" />
                    <Key frame="469" value="6.94104" />
                    <Key frame="512" value="8.25942" />
                    <Key frame="549" value="29.8808" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="23" value="55.4621" />
                    <Key frame="38" value="63.1087" />
                    <Key frame="47" value="21.7996" />
                    <Key frame="62" value="66.6243" />
                    <Key frame="75" value="45.9698" />
                    <Key frame="143" value="65.306" />
                    <Key frame="219" value="75.9409" />
                    <Key frame="232" value="70.7552" />
                    <Key frame="245" value="28.743" />
                    <Key frame="253" value="49.3976" />
                    <Key frame="257" value="50.2765" />
                    <Key frame="266" value="68.558" />
                    <Key frame="270" value="40" />
                    <Key frame="276" value="61.0872" />
                    <Key frame="281" value="38.499" />
                    <Key frame="294" value="82.3569" />
                    <Key frame="326" value="87.2789" />
                    <Key frame="354" value="66.888" />
                    <Key frame="378" value="32.6981" />
                    <Key frame="452" value="35.0712" />
                    <Key frame="469" value="34.7196" />
                    <Key frame="512" value="34.5438" />
                    <Key frame="549" value="73.0404" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="23" value="7.99574" />
                    <Key frame="38" value="8.17153" />
                    <Key frame="47" value="11" />
                    <Key frame="62" value="10.0173" />
                    <Key frame="75" value="9.31412" />
                    <Key frame="143" value="9.75358" />
                    <Key frame="219" value="8.61098" />
                    <Key frame="232" value="10.3688" />
                    <Key frame="245" value="10.193" />
                    <Key frame="294" value="9.66569" />
                    <Key frame="326" value="9.75358" />
                    <Key frame="354" value="9.75358" />
                    <Key frame="378" value="10.3688" />
                    <Key frame="452" value="10.0173" />
                    <Key frame="469" value="11.1598" />
                    <Key frame="512" value="11.1598" />
                    <Key frame="549" value="-4.04542" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="23" value="0.598207" />
                    <Key frame="38" value="0.598207" />
                    <Key frame="47" value="0.0981818" />
                    <Key frame="62" value="0.117844" />
                    <Key frame="75" value="0.121117" />
                    <Key frame="143" value="0.122572" />
                    <Key frame="219" value="0.122935" />
                    <Key frame="232" value="0.121844" />
                    <Key frame="245" value="0.124026" />
                    <Key frame="294" value="0.124026" />
                    <Key frame="326" value="0.12439" />
                    <Key frame="354" value="0.127299" />
                    <Key frame="378" value="0.129844" />
                    <Key frame="452" value="0.127299" />
                    <Key frame="469" value="0.13239" />
                    <Key frame="512" value="0.133117" />
                    <Key frame="549" value="0.2996" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="-40.7794" />
                    <Key frame="48" value="-40.0658" />
                    <Key frame="76" value="-35.6816" />
                    <Key frame="144" value="-38.1426" />
                    <Key frame="220" value="-36.9121" />
                    <Key frame="233" value="-36.5606" />
                    <Key frame="246" value="-43.933" />
                    <Key frame="282" value="-46.1303" />
                    <Key frame="295" value="-39.6264" />
                    <Key frame="327" value="-36.4727" />
                    <Key frame="355" value="-55" />
                    <Key frame="379" value="-55" />
                    <Key frame="453" value="-55" />
                    <Key frame="470" value="-55" />
                    <Key frame="513" value="-55" />
                    <Key frame="550" value="-35.0664" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="8.70368" />
                    <Key frame="48" value="1.36512" />
                    <Key frame="76" value="10.4615" />
                    <Key frame="144" value="10.11" />
                    <Key frame="220" value="7.4732" />
                    <Key frame="233" value="9.84628" />
                    <Key frame="246" value="-3.82049" />
                    <Key frame="282" value="-5.40254" />
                    <Key frame="295" value="3.91398" />
                    <Key frame="327" value="10.901" />
                    <Key frame="355" value="-1.79898" />
                    <Key frame="379" value="-2.94157" />
                    <Key frame="453" value="-4.61152" />
                    <Key frame="470" value="-6.19357" />
                    <Key frame="513" value="-7.86351" />
                    <Key frame="550" value="15.9108" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="-91.0534" />
                    <Key frame="48" value="-90" />
                    <Key frame="76" value="-91.5808" />
                    <Key frame="144" value="-91.405" />
                    <Key frame="220" value="-91.0534" />
                    <Key frame="233" value="-91.4929" />
                    <Key frame="246" value="-90" />
                    <Key frame="282" value="-90" />
                    <Key frame="295" value="-90" />
                    <Key frame="327" value="-91.5808" />
                    <Key frame="355" value="-75.3617" />
                    <Key frame="379" value="-82.4809" />
                    <Key frame="453" value="-84.063" />
                    <Key frame="470" value="-85.8208" />
                    <Key frame="513" value="-87.5787" />
                    <Key frame="550" value="-90.1745" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="82.5279" />
                    <Key frame="48" value="18.9245" />
                    <Key frame="76" value="64.7738" />
                    <Key frame="144" value="72.3325" />
                    <Key frame="220" value="71.5415" />
                    <Key frame="233" value="62.3128" />
                    <Key frame="246" value="47.4893" />
                    <Key frame="282" value="50.3018" />
                    <Key frame="295" value="56.63" />
                    <Key frame="327" value="65.1254" />
                    <Key frame="355" value="2.66448" />
                    <Key frame="379" value="2.75238" />
                    <Key frame="453" value="5.47702" />
                    <Key frame="470" value="8.11377" />
                    <Key frame="513" value="10.9263" />
                    <Key frame="550" value="79.9791" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="47.7228" />
                    <Key frame="48" value="43.2822" />
                    <Key frame="76" value="52.8695" />
                    <Key frame="144" value="52.8695" />
                    <Key frame="220" value="52.8695" />
                    <Key frame="233" value="52.7326" />
                    <Key frame="246" value="43.2822" />
                    <Key frame="282" value="41.6123" />
                    <Key frame="295" value="43.2822" />
                    <Key frame="327" value="52.86" />
                    <Key frame="355" value="43.1943" />
                    <Key frame="379" value="43.2822" />
                    <Key frame="453" value="41.6123" />
                    <Key frame="470" value="39.8544" />
                    <Key frame="513" value="38.1845" />
                    <Key frame="550" value="47.8986" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="3.51807" />
                    <Key frame="48" value="0.65146" />
                    <Key frame="76" value="-1.84332" />
                    <Key frame="144" value="0.090296" />
                    <Key frame="220" value="0.266079" />
                    <Key frame="233" value="-1.75543" />
                    <Key frame="246" value="0.387785" />
                    <Key frame="282" value="2.14562" />
                    <Key frame="295" value="0.212001" />
                    <Key frame="327" value="-2.01911" />
                    <Key frame="355" value="-0.491132" />
                    <Key frame="379" value="1.00303" />
                    <Key frame="453" value="2.76086" />
                    <Key frame="470" value="4.5187" />
                    <Key frame="513" value="6.18864" />
                    <Key frame="550" value="-0.524946" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="-8.52309" />
                    <Key frame="48" value="-1.57621" />
                    <Key frame="76" value="-11.5114" />
                    <Key frame="144" value="-10.0173" />
                    <Key frame="220" value="-13.7087" />
                    <Key frame="233" value="-4.30429" />
                    <Key frame="246" value="-11.9474" />
                    <Key frame="282" value="-9.75014" />
                    <Key frame="295" value="-5.61923" />
                    <Key frame="327" value="-12.0388" />
                    <Key frame="355" value="5.8067" />
                    <Key frame="379" value="2.6426" />
                    <Key frame="453" value="4.83989" />
                    <Key frame="470" value="6.94929" />
                    <Key frame="513" value="9.14658" />
                    <Key frame="550" value="-15.3786" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="-91.234" />
                    <Key frame="48" value="-90" />
                    <Key frame="76" value="-91.7614" />
                    <Key frame="144" value="-91.7614" />
                    <Key frame="220" value="-91.9371" />
                    <Key frame="233" value="-66.8001" />
                    <Key frame="246" value="-90" />
                    <Key frame="282" value="-90" />
                    <Key frame="295" value="-90" />
                    <Key frame="327" value="-91.8493" />
                    <Key frame="355" value="-80.0646" />
                    <Key frame="379" value="-86.3049" />
                    <Key frame="453" value="-88.5901" />
                    <Key frame="470" value="-90" />
                    <Key frame="513" value="-90" />
                    <Key frame="550" value="-90.7946" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="82.7085" />
                    <Key frame="48" value="19.7822" />
                    <Key frame="76" value="64.6028" />
                    <Key frame="144" value="72.7768" />
                    <Key frame="220" value="68.3822" />
                    <Key frame="233" value="6.85796" />
                    <Key frame="246" value="33.0538" />
                    <Key frame="282" value="35.1632" />
                    <Key frame="295" value="44.9192" />
                    <Key frame="327" value="61.7903" />
                    <Key frame="355" value="5.98319" />
                    <Key frame="379" value="4.92849" />
                    <Key frame="453" value="7.03789" />
                    <Key frame="470" value="9.14729" />
                    <Key frame="513" value="11.3446" />
                    <Key frame="550" value="80.7749" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="47.7276" />
                    <Key frame="48" value="-0.561297" />
                    <Key frame="76" value="53.4029" />
                    <Key frame="144" value="53.4029" />
                    <Key frame="220" value="53.4029" />
                    <Key frame="233" value="37.7958" />
                    <Key frame="246" value="-20.249" />
                    <Key frame="282" value="-21.7432" />
                    <Key frame="295" value="29.5856" />
                    <Key frame="327" value="53.4" />
                    <Key frame="355" value="33.8044" />
                    <Key frame="379" value="37.5837" />
                    <Key frame="453" value="36.0896" />
                    <Key frame="470" value="34.6833" />
                    <Key frame="513" value="33.1891" />
                    <Key frame="550" value="48.8702" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="24" value="-3.86483" />
                    <Key frame="48" value="-1.01294" />
                    <Key frame="76" value="1.84813" />
                    <Key frame="144" value="-0.261271" />
                    <Key frame="220" value="2.46337" />
                    <Key frame="233" value="-7.46839" />
                    <Key frame="246" value="-0.749262" />
                    <Key frame="282" value="-2.5071" />
                    <Key frame="295" value="-2.77077" />
                    <Key frame="327" value="1.84813" />
                    <Key frame="355" value="-2.5071" />
                    <Key frame="379" value="-2.85866" />
                    <Key frame="453" value="-4.6165" />
                    <Key frame="470" value="-6.37433" />
                    <Key frame="513" value="-8.04427" />
                    <Key frame="550" value="1.0571" />
                </ActuatorCurve>
            </ActuatorList>
        </Timeline>
        <Resource name="Sitting" type="Lock" timeout="1" />
        <Resource name="Left eye leds" type="Lock" timeout="1" />
        <Resource name="Right eye leds" type="Lock" timeout="1" />
        <Resource name="TTS" type="Lock" timeout="1" />
        <Resource name="HeadYaw" type="Lock" timeout="1" />
        <Resource name="HeadPitch" type="Lock" timeout="1" />
        <Resource name="LShoulderPitch" type="Lock" timeout="1" />
        <Resource name="LShoulderRoll" type="Lock" timeout="1" />
        <Resource name="LElbowRoll" type="Lock" timeout="1" />
        <Resource name="LElbowYaw" type="Lock" timeout="1" />
        <Resource name="LWristYaw" type="Lock" timeout="1" />
        <Resource name="LHand" type="Lock" timeout="1" />
        <Resource name="RShoulderPitch" type="Lock" timeout="1" />
        <Resource name="RShoulderRoll" type="Lock" timeout="1" />
        <Resource name="RElbowRoll" type="Lock" timeout="1" />
        <Resource name="RElbowYaw" type="Lock" timeout="1" />
        <Resource name="RWristYaw" type="Lock" timeout="1" />
        <Resource name="RHand" type="Lock" timeout="1" />
        <Resource name="LHipYawPitch" type="Lock" timeout="1" />
        <Resource name="LHipRoll" type="Lock" timeout="1" />
        <Resource name="LHipPitch" type="Lock" timeout="1" />
        <Resource name="LKneePitch" type="Lock" timeout="1" />
        <Resource name="LAnklePitch" type="Lock" timeout="1" />
        <Resource name="LAnkleRoll" type="Lock" timeout="1" />
        <Resource name="RHipRoll" type="Lock" timeout="1" />
        <Resource name="RHipPitch" type="Lock" timeout="1" />
        <Resource name="RKneePitch" type="Lock" timeout="1" />
        <Resource name="RAnklePitch" type="Lock" timeout="1" />
        <Resource name="RAnkleRoll" type="Lock" timeout="1" />
    </Box>
</ChoregrapheProject>
