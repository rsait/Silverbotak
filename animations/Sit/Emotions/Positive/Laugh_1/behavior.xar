<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" robot="" id="1" tooltip="style:&#x0A;happy; fun&#x0A;tags:&#x0A;laugh" bitmap_expanded="1" plugin="" x="312" y="59">
        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.oldfps = self.getTimeline().getFPS()
        pass

    def onUnload(self):
        self.getTimeline().setFPS(self.oldfps)
        pass

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        self.getTimeline().setFPS(newfps)
        pass

    def onInput_onStop(self):
        onUnload()
        pass]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
        <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="behavior_layer1" mute="0">
                <BehaviorKeyframe name="FaceLeds" index="1" bitmap="">
                    <Diagram scale="100">
                        <Box name="Light_EarsFlashes" robot="" id="1" tooltip="Set An EarLeds Flashing Loop&#x0A;*** state: ds/EarLedsBoxes.x ***&#x0A;*** ref box in: .//2_wip/leds/EarLedsBoxes.xar ***&#x0A;*** last modification date(svn): 2009-04-16 14:43:08 +0200 ***" bitmap_expanded="1" plugin="" x="128" y="168">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.time = 0.3
    self.ledName = "EarLeds"
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    ALLeds.fade(self.ledName, 1.0, self.time)

    while( not self.bMustStop ):
      ALLeds.fade(self.ledName, 0.0, self.time)
      ALLeds.fade(self.ledName, 1.0, self.time)

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Box name="Light_VeryHappyEyes" robot="" id="2" tooltip="Set An Animated Gaze Which Expresses Great Joy&#x0A;*** state: se/Leds/Light_VeryHappyEyes/Light_VeryHappyEyes.x ***&#x0A;*** ref box in: .//5a_release/Leds/Light_VeryHappyEyes/Light_VeryHappyEyes.xar ***&#x0A;*** last modification date(svn): 2009-04-17 14:01:23 +0200 ***" bitmap_expanded="1" plugin="" x="188" y="47">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0xffff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0xffff00, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x000000, rDuration );

    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLedsExternal", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLedsExternal", 0xffff00, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.fadeRGB( "FaceLedsInternal", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLedsInternal", 0xffff00, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe137" index="137" bitmap="">
                    <Diagram scale="100">
                        <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <BehaviorLayer name="behavior_layer2" mute="0">
                <BehaviorKeyframe name="Sound" index="19" bitmap="">
                    <Diagram scale="100">
                        <Box name="Play Sound" robot="" id="1" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." bitmap_expanded="1" plugin="" x="68" y="34">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/ptdr3.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Play Sound File" robot="" id="2" tooltip="Play the sound." bitmap_expanded="1" plugin="" x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" robot="" id="1" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." bitmap_expanded="1" plugin="" x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList>
                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="13" value="-23.2058" />
                    <Key frame="25" value="-11.4283" />
                    <Key frame="36" value="-9.23104" />
                    <Key frame="51" value="20.3006" />
                    <Key frame="59" value="16.3455" />
                    <Key frame="66" value="12.7419" />
                    <Key frame="76" value="-15.3835" />
                    <Key frame="86" value="7.11683" />
                    <Key frame="94" value="-8.96736" />
                    <Key frame="103" value="11.5114" />
                    <Key frame="113" value="-18.8112" />
                    <Key frame="122" value="-15.9987" />
                    <Key frame="140" value="-2.99072" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="13" value="-11.1647" />
                    <Key frame="25" value="23.6405" />
                    <Key frame="36" value="5.18321" />
                    <Key frame="51" value="27.8593" />
                    <Key frame="59" value="12.9177" />
                    <Key frame="66" value="30.496" />
                    <Key frame="76" value="30.496" />
                    <Key frame="86" value="30.6718" />
                    <Key frame="94" value="30.6718" />
                    <Key frame="103" value="30.6718" />
                    <Key frame="113" value="14.0603" />
                    <Key frame="122" value="8.78677" />
                    <Key frame="140" value="-4.13332" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="16" value="54.7541" />
                    <Key frame="25" value="42.1856" />
                    <Key frame="35" value="18.1912" />
                    <Key frame="42" value="30.7597" />
                    <Key frame="49" value="30.8476" />
                    <Key frame="56" value="32.0781" />
                    <Key frame="64" value="49.217" />
                    <Key frame="72" value="49.1291" />
                    <Key frame="79" value="46.9318" />
                    <Key frame="98" value="47.8986" />
                    <Key frame="116" value="44.5587" />
                    <Key frame="138" value="53.1721" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="16" value="15.115" />
                    <Key frame="25" value="30.0566" />
                    <Key frame="35" value="26.0135" />
                    <Key frame="42" value="29.7929" />
                    <Key frame="49" value="29.6171" />
                    <Key frame="56" value="29.3534" />
                    <Key frame="64" value="36.209" />
                    <Key frame="72" value="36.2969" />
                    <Key frame="79" value="30.4081" />
                    <Key frame="98" value="15.4665" />
                    <Key frame="116" value="23.4647" />
                    <Key frame="138" value="13.7966" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="16" value="-43.8604" />
                    <Key frame="25" value="-8.26423" />
                    <Key frame="35" value="-35.5986" />
                    <Key frame="42" value="7.46839" />
                    <Key frame="49" value="7.64418" />
                    <Key frame="56" value="-54.4074" />
                    <Key frame="64" value="-36.3896" />
                    <Key frame="72" value="-36.038" />
                    <Key frame="79" value="-47.2882" />
                    <Key frame="98" value="-14.3288" />
                    <Key frame="116" value="-23.2937" />
                    <Key frame="138" value="-24.7" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="16" value="-80.2427" />
                    <Key frame="25" value="-77.6939" />
                    <Key frame="35" value="-88.7682" />
                    <Key frame="42" value="-73.2114" />
                    <Key frame="49" value="-73.2993" />
                    <Key frame="56" value="-75.2329" />
                    <Key frame="64" value="-44.295" />
                    <Key frame="72" value="-44.2071" />
                    <Key frame="79" value="-83.2311" />
                    <Key frame="98" value="-71.9809" />
                    <Key frame="116" value="-70.1352" />
                    <Key frame="138" value="-72.5083" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="14" value="-21.3601" />
                    <Key frame="138" value="4.04062" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="14" value="0.0149355" />
                    <Key frame="138" value="0.3028" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="14" value="21.7996" />
                    <Key frame="23" value="37.8837" />
                    <Key frame="33" value="26.7215" />
                    <Key frame="40" value="20.3933" />
                    <Key frame="47" value="41.3994" />
                    <Key frame="54" value="36.3017" />
                    <Key frame="62" value="37.6201" />
                    <Key frame="70" value="25.8426" />
                    <Key frame="77" value="28.3914" />
                    <Key frame="96" value="37.9716" />
                    <Key frame="114" value="37.3564" />
                    <Key frame="136" value="55.3742" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="14" value="-27.6883" />
                    <Key frame="23" value="-6.50639" />
                    <Key frame="33" value="-34.9833" />
                    <Key frame="40" value="-27.2488" />
                    <Key frame="47" value="-34.8075" />
                    <Key frame="54" value="-35.8622" />
                    <Key frame="62" value="-33.3134" />
                    <Key frame="70" value="-33.6649" />
                    <Key frame="77" value="-26.0184" />
                    <Key frame="96" value="-12.483" />
                    <Key frame="114" value="-18.1081" />
                    <Key frame="136" value="-13.2741" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="14" value="57.6546" />
                    <Key frame="23" value="1.22808" />
                    <Key frame="33" value="-6.85796" />
                    <Key frame="40" value="41.3067" />
                    <Key frame="47" value="18.8943" />
                    <Key frame="54" value="46.4923" />
                    <Key frame="62" value="13.1814" />
                    <Key frame="70" value="36.209" />
                    <Key frame="77" value="-12.1315" />
                    <Key frame="96" value="12.1267" />
                    <Key frame="114" value="12.8298" />
                    <Key frame="136" value="27.8593" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="14" value="74.0951" />
                    <Key frame="23" value="56.4289" />
                    <Key frame="33" value="83.0601" />
                    <Key frame="40" value="89.1246" />
                    <Key frame="47" value="53.0011" />
                    <Key frame="54" value="70.931" />
                    <Key frame="62" value="62.4934" />
                    <Key frame="70" value="74.5346" />
                    <Key frame="77" value="76.0287" />
                    <Key frame="96" value="56.341" />
                    <Key frame="114" value="63.2844" />
                    <Key frame="136" value="71.6342" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="12" value="28.0351" />
                    <Key frame="136" value="-3.34229" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="12" value="0.0891171" />
                    <Key frame="136" value="0.3004" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="-32.4296" />
                    <Key frame="38" value="-47.9865" />
                    <Key frame="106" value="-51.9416" />
                    <Key frame="132" value="-35.1543" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="11.0768" />
                    <Key frame="38" value="12.483" />
                    <Key frame="106" value="13.3619" />
                    <Key frame="132" value="15.735" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="-91.2292" />
                    <Key frame="38" value="-90.7019" />
                    <Key frame="106" value="-89.2956" />
                    <Key frame="132" value="-89.9108" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="77.4302" />
                    <Key frame="38" value="62.8402" />
                    <Key frame="106" value="61.8734" />
                    <Key frame="132" value="79.8912" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="51.0627" />
                    <Key frame="38" value="52.8205" />
                    <Key frame="106" value="52.8695" />
                    <Key frame="132" value="47.8107" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="0.617646" />
                    <Key frame="38" value="-2.81013" />
                    <Key frame="106" value="-2.45856" />
                    <Key frame="132" value="-0.612838" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="-12.0388" />
                    <Key frame="38" value="-13.5329" />
                    <Key frame="106" value="-11.7751" />
                    <Key frame="132" value="-15.2908" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="-92.1129" />
                    <Key frame="38" value="-91.234" />
                    <Key frame="106" value="-90.5309" />
                    <Key frame="132" value="-90.6188" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="80.3354" />
                    <Key frame="38" value="62.1419" />
                    <Key frame="106" value="66.3607" />
                    <Key frame="132" value="80.5991" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="49.4854" />
                    <Key frame="38" value="53.4029" />
                    <Key frame="106" value="53.3527" />
                    <Key frame="132" value="48.7823" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="21" value="0.00240423" />
                    <Key frame="38" value="2.63916" />
                    <Key frame="106" value="0.00240423" />
                    <Key frame="132" value="1.145" />
                </ActuatorCurve>
            </ActuatorList>
        </Timeline>
        <Resource name="Sitting" type="Lock" timeout="1" />
        <Resource name="Left eye leds" type="Lock" timeout="1" />
        <Resource name="Right eye leds" type="Lock" timeout="1" />
        <Resource name="All motors" type="Lock" timeout="1" />
    </Box>
</ChoregrapheProject>
