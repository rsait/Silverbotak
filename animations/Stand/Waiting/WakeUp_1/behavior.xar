<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" robot="" id="1" tooltip="style:&#x0A;happy&#x0A;tags:&#x0A;wake up; stretch" bitmap_expanded="1" plugin="" x="283" y="80">
        <bitmap>media/images/box/movement/move.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.oldfps = self.getTimeline().getFPS()
        pass

    def onUnload(self):
        self.getTimeline().setFPS(self.oldfps)
        pass

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        self.getTimeline().setFPS(newfps)
        pass

    def onInput_onStop(self):
        onUnload()
        pass]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Animation starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Animation stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when animation is finished." id="4" />
        <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
        <Timeline fps="25" resources_acquisition="0" size="1000" enable="1" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="Fx" mute="0">
                <BehaviorKeyframe name="keyframe77" index="77" bitmap="">
                    <Diagram scale="-1">
                        <Box name="Play Sound" robot="" id="1" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." bitmap_expanded="1" plugin="" x="91" y="30">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/yawn2.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Play Sound File" robot="" id="2" tooltip="Play the sound." bitmap_expanded="1" plugin="" x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" robot="" id="1" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." bitmap_expanded="1" plugin="" x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe245" index="245" bitmap="">
                    <Diagram scale="-1">
                        <Box name="Play Sound" robot="" id="1" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." bitmap_expanded="1" plugin="" x="125" y="37">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/yawn3.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Play Sound File" robot="" id="2" tooltip="Play the sound." bitmap_expanded="1" plugin="" x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" robot="" id="1" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." bitmap_expanded="1" plugin="" x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe383" index="383" bitmap="">
                    <Diagram scale="-1">
                        <Box name="Play Sound" robot="" id="1" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." bitmap_expanded="1" plugin="" x="106" y="33">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/contentement3.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Play Sound File" robot="" id="2" tooltip="Play the sound." bitmap_expanded="1" plugin="" x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" robot="" id="1" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." bitmap_expanded="1" plugin="" x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <BehaviorLayer name="LED" mute="0">
                <BehaviorKeyframe name="keyframe34" index="34" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="tags:&#x0A;LED" bitmap_expanded="1" plugin="" x="96" y="35">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe149" index="149" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="tags:&#x0A;LED" bitmap_expanded="1" plugin="" x="104" y="46">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe167" index="167" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="tags:&#x0A;LED" bitmap_expanded="1" plugin="" x="116" y="34">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe298" index="298" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="tags:&#x0A;LED" bitmap_expanded="1" plugin="" x="74" y="42">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe419" index="419" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="tags:&#x0A;LED" bitmap_expanded="1" plugin="" x="113" y="48">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe437" index="437" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="tags:&#x0A;LED" bitmap_expanded="1" plugin="" x="104" y="40">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe525" index="525" bitmap="">
                    <Diagram scale="-1">
                        <Box name="blink" robot="" id="2" tooltip="tags:&#x0A;LED" bitmap_expanded="1" plugin="" x="97" y="24">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList>
                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="50" value="-2.1997" />
                    <Key frame="99" value="-0.266079" />
                    <Key frame="129" value="-0.617646" />
                    <Key frame="153" value="-0.00240423" />
                    <Key frame="206" value="-8.70368" />
                    <Key frame="238" value="-23.8211" />
                    <Key frame="271" value="-39.2021" />
                    <Key frame="308" value="-31.7313" />
                    <Key frame="340" value="-16.0866" />
                    <Key frame="379" value="2.54646" />
                    <Key frame="412" value="-16.8776" />
                    <Key frame="433" value="-22.3269" />
                    <Key frame="461" value="-22.3269" />
                    <Key frame="486" value="-17.6686" />
                    <Key frame="515" value="-13.1862" />
                    <Key frame="545" value="-0.969213" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="50" value="23.8163" />
                    <Key frame="99" value="-35.0712" />
                    <Key frame="129" value="-38.5" />
                    <Key frame="153" value="-18.3" />
                    <Key frame="182" value="10.3" />
                    <Key frame="206" value="11.863" />
                    <Key frame="238" value="13.9724" />
                    <Key frame="271" value="11.7751" />
                    <Key frame="308" value="-8.87947" />
                    <Key frame="340" value="12.654" />
                    <Key frame="379" value="10.4567" />
                    <Key frame="412" value="20.74" />
                    <Key frame="433" value="23.7284" />
                    <Key frame="461" value="20.4764" />
                    <Key frame="486" value="8.69888" />
                    <Key frame="515" value="0.437054" />
                    <Key frame="545" value="-9.5826" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="48" value="34.539" />
                    <Key frame="97" value="11.5993" />
                    <Key frame="127" value="2.01911" />
                    <Key frame="151" value="8.52309" />
                    <Key frame="204" value="8.17153" />
                    <Key frame="236" value="26.9804" />
                    <Key frame="269" value="102.216" />
                    <Key frame="306" value="116.103" />
                    <Key frame="338" value="97.6453" />
                    <Key frame="377" value="100.458" />
                    <Key frame="410" value="73.2993" />
                    <Key frame="459" value="74.2661" />
                    <Key frame="484" value="70.6625" />
                    <Key frame="543" value="88.5925" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="48" value="19.949" />
                    <Key frame="97" value="-10.5494" />
                    <Key frame="127" value="-10.1978" />
                    <Key frame="151" value="-5.18802" />
                    <Key frame="180" value="10" />
                    <Key frame="204" value="10.7204" />
                    <Key frame="236" value="19.3338" />
                    <Key frame="269" value="32.2539" />
                    <Key frame="306" value="30.3202" />
                    <Key frame="338" value="20.2127" />
                    <Key frame="377" value="9.22623" />
                    <Key frame="410" value="-0.441863" />
                    <Key frame="459" value="7.55628" />
                    <Key frame="484" value="4.2164" />
                    <Key frame="543" value="6.58948" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="48" value="-3.07861" />
                    <Key frame="97" value="-17.9323" />
                    <Key frame="127" value="-38.7627" />
                    <Key frame="151" value="-38.6748" />
                    <Key frame="180" value="0.6" />
                    <Key frame="204" value="0.788621" />
                    <Key frame="236" value="-69.1732" />
                    <Key frame="269" value="-119.271" />
                    <Key frame="306" value="-119.447" />
                    <Key frame="338" value="-110.482" />
                    <Key frame="377" value="-92.5524" />
                    <Key frame="410" value="-45.0909" />
                    <Key frame="459" value="-47.5518" />
                    <Key frame="484" value="-51.5948" />
                    <Key frame="543" value="-67.1517" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="48" value="-79.2759" />
                    <Key frame="97" value="-22.1463" />
                    <Key frame="127" value="-8.61098" />
                    <Key frame="151" value="-5.79845" />
                    <Key frame="180" value="-55.5" />
                    <Key frame="204" value="-82.7037" />
                    <Key frame="236" value="-83.4068" />
                    <Key frame="269" value="-21.9705" />
                    <Key frame="306" value="-10.2809" />
                    <Key frame="338" value="-39.0215" />
                    <Key frame="377" value="-68.1137" />
                    <Key frame="410" value="-88.5" />
                    <Key frame="459" value="-11.2477" />
                    <Key frame="484" value="-5.97423" />
                    <Key frame="513" value="-43.6" />
                    <Key frame="543" value="-28.2987" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="48" value="19.949" />
                    <Key frame="97" value="13.445" />
                    <Key frame="127" value="-2.55126" />
                    <Key frame="151" value="-1.23289" />
                    <Key frame="204" value="13.6208" />
                    <Key frame="236" value="-16.1745" />
                    <Key frame="269" value="9.31412" />
                    <Key frame="306" value="-14.5924" />
                    <Key frame="338" value="-13.2741" />
                    <Key frame="377" value="-36.4775" />
                    <Key frame="410" value="-51.7706" />
                    <Key frame="459" value="17.7517" />
                    <Key frame="484" value="15.7302" />
                    <Key frame="543" value="5.53477" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="48" value="0.3028" />
                    <Key frame="97" value="0.5" />
                    <Key frame="127" value="0.69" />
                    <Key frame="151" value="0.5" />
                    <Key frame="204" value="0.3" />
                    <Key frame="236" value="0.3024" />
                    <Key frame="269" value="0.1" />
                    <Key frame="306" value="0.1244" />
                    <Key frame="338" value="0.464" />
                    <Key frame="377" value="0.4632" />
                    <Key frame="410" value="0.3032" />
                    <Key frame="459" value="0.1" />
                    <Key frame="484" value="0.1" />
                    <Key frame="543" value="0.3028" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="46" value="33.2255" />
                    <Key frame="95" value="9.14314" />
                    <Key frame="125" value="2.63916" />
                    <Key frame="149" value="9.05525" />
                    <Key frame="202" value="-27.0682" />
                    <Key frame="234" value="-66.0922" />
                    <Key frame="267" value="-79.8033" />
                    <Key frame="304" value="-78.7486" />
                    <Key frame="336" value="-78.7486" />
                    <Key frame="375" value="-5.53477" />
                    <Key frame="408" value="79.9839" />
                    <Key frame="457" value="51.1554" />
                    <Key frame="482" value="55.8137" />
                    <Key frame="541" value="86.6636" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="46" value="-20.7449" />
                    <Key frame="95" value="7.99574" />
                    <Key frame="125" value="5.97423" />
                    <Key frame="149" value="3.24959" />
                    <Key frame="178" value="-13.8" />
                    <Key frame="202" value="-16.2624" />
                    <Key frame="234" value="-27.3367" />
                    <Key frame="267" value="-45.7061" />
                    <Key frame="304" value="-31.7313" />
                    <Key frame="336" value="-48.7823" />
                    <Key frame="375" value="-18.4597" />
                    <Key frame="408" value="-10.8131" />
                    <Key frame="457" value="17.7517" />
                    <Key frame="482" value="17.4881" />
                    <Key frame="541" value="-4.83645" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="46" value="-1.49656" />
                    <Key frame="95" value="4.30429" />
                    <Key frame="125" value="22.0584" />
                    <Key frame="149" value="21.619" />
                    <Key frame="178" value="-26.4" />
                    <Key frame="202" value="-19.778" />
                    <Key frame="234" value="-49.5733" />
                    <Key frame="267" value="3.24959" />
                    <Key frame="304" value="-5.01223" />
                    <Key frame="336" value="7.99574" />
                    <Key frame="375" value="75.4087" />
                    <Key frame="408" value="46.0529" />
                    <Key frame="457" value="-16.7897" />
                    <Key frame="482" value="-4.39699" />
                    <Key frame="541" value="66.7953" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="46" value="83.0601" />
                    <Key frame="95" value="23.3816" />
                    <Key frame="125" value="7.64898" />
                    <Key frame="149" value="7.4732" />
                    <Key frame="178" value="64.2" />
                    <Key frame="202" value="88.5" />
                    <Key frame="234" value="78.3139" />
                    <Key frame="267" value="29.2703" />
                    <Key frame="304" value="2" />
                    <Key frame="336" value="21.8874" />
                    <Key frame="375" value="70.0521" />
                    <Key frame="408" value="87.8941" />
                    <Key frame="457" value="16.3503" />
                    <Key frame="482" value="13.0983" />
                    <Key frame="511" value="32.8" />
                    <Key frame="541" value="24.0847" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="46" value="-5.3638" />
                    <Key frame="95" value="20.5643" />
                    <Key frame="125" value="12.4782" />
                    <Key frame="149" value="12.5661" />
                    <Key frame="202" value="11.1598" />
                    <Key frame="234" value="9.66569" />
                    <Key frame="267" value="40.252" />
                    <Key frame="304" value="47.7228" />
                    <Key frame="336" value="70.0473" />
                    <Key frame="375" value="64.8617" />
                    <Key frame="408" value="62.2249" />
                    <Key frame="457" value="12.0388" />
                    <Key frame="482" value="-1.0571" />
                    <Key frame="541" value="9.75358" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="46" value="0.306" />
                    <Key frame="95" value="0.5" />
                    <Key frame="125" value="0.7916" />
                    <Key frame="149" value="0.6" />
                    <Key frame="202" value="0.3" />
                    <Key frame="234" value="0.302" />
                    <Key frame="267" value="0.1" />
                    <Key frame="304" value="0.1" />
                    <Key frame="336" value="0.5452" />
                    <Key frame="375" value="0.5444" />
                    <Key frame="408" value="0.304" />
                    <Key frame="457" value="0.1024" />
                    <Key frame="482" value="0.1" />
                    <Key frame="541" value="0.3044" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="-15.5544" />
                    <Key frame="96" value="-15.5544" />
                    <Key frame="126" value="-15.2029" />
                    <Key frame="150" value="-15.2908" />
                    <Key frame="203" value="-15.2908" />
                    <Key frame="235" value="-13.0935" />
                    <Key frame="268" value="-11.5993" />
                    <Key frame="305" value="-7.81996" />
                    <Key frame="337" value="-11.6872" />
                    <Key frame="376" value="-11.2477" />
                    <Key frame="409" value="-10.4567" />
                    <Key frame="430" value="-11.7751" />
                    <Key frame="458" value="-11.7751" />
                    <Key frame="483" value="-12.3" />
                    <Key frame="512" value="-11.3356" />
                    <Key frame="542" value="-9.05044" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="0.353971" />
                    <Key frame="96" value="-1.57965" />
                    <Key frame="126" value="-0.876513" />
                    <Key frame="150" value="-0.876513" />
                    <Key frame="203" value="20.1296" />
                    <Key frame="235" value="26.0184" />
                    <Key frame="268" value="25.3152" />
                    <Key frame="305" value="25.9305" />
                    <Key frame="337" value="21.7117" />
                    <Key frame="376" value="-15.9939" />
                    <Key frame="409" value="-16.5" />
                    <Key frame="430" value="-17.0486" />
                    <Key frame="458" value="-16.3455" />
                    <Key frame="483" value="-15.3" />
                    <Key frame="512" value="-14.7634" />
                    <Key frame="542" value="6.94585" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="-35.7695" />
                    <Key frame="96" value="-35.6816" />
                    <Key frame="126" value="-46.6681" />
                    <Key frame="150" value="-46.6681" />
                    <Key frame="203" value="-10.5446" />
                    <Key frame="235" value="-12.8298" />
                    <Key frame="268" value="-47.7228" />
                    <Key frame="305" value="-50.7111" />
                    <Key frame="337" value="-14.4997" />
                    <Key frame="376" value="14.2409" />
                    <Key frame="409" value="13.6256" />
                    <Key frame="430" value="12.5709" />
                    <Key frame="458" value="12" />
                    <Key frame="483" value="7.5" />
                    <Key frame="512" value="0.266079" />
                    <Key frame="542" value="11.7799" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="9.13834" />
                    <Key frame="96" value="-5.29" />
                    <Key frame="126" value="-4.66067" />
                    <Key frame="150" value="-4.66067" />
                    <Key frame="203" value="-5.29" />
                    <Key frame="235" value="32.6054" />
                    <Key frame="268" value="84.8131" />
                    <Key frame="305" value="94.9207" />
                    <Key frame="337" value="42.8009" />
                    <Key frame="376" value="-3.43018" />
                    <Key frame="409" value="-3.69386" />
                    <Key frame="430" value="-4.13332" />
                    <Key frame="458" value="-4.13332" />
                    <Key frame="483" value="-2.55126" />
                    <Key frame="512" value="-3.51807" />
                    <Key frame="542" value="-5.29" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="10.2809" />
                    <Key frame="96" value="17.5759" />
                    <Key frame="126" value="24.7831" />
                    <Key frame="150" value="24.871" />
                    <Key frame="203" value="13.3571" />
                    <Key frame="235" value="-10.3736" />
                    <Key frame="268" value="2.98591" />
                    <Key frame="305" value="-8.79158" />
                    <Key frame="337" value="-17.3171" />
                    <Key frame="376" value="0.876513" />
                    <Key frame="409" value="-1.0571" />
                    <Key frame="430" value="-0.1" />
                    <Key frame="458" value="-0.2" />
                    <Key frame="483" value="1.4" />
                    <Key frame="512" value="5.44688" />
                    <Key frame="542" value="4.04062" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="-4.83164" />
                    <Key frame="96" value="-4.30429" />
                    <Key frame="126" value="-4.65586" />
                    <Key frame="150" value="-4.65586" />
                    <Key frame="203" value="-16.4333" />
                    <Key frame="235" value="-21.8826" />
                    <Key frame="268" value="-19.158" />
                    <Key frame="305" value="-24.1678" />
                    <Key frame="337" value="-15.4665" />
                    <Key frame="376" value="13.0983" />
                    <Key frame="409" value="18.7" />
                    <Key frame="430" value="19.9" />
                    <Key frame="458" value="18.7233" />
                    <Key frame="483" value="18.8991" />
                    <Key frame="512" value="13.5377" />
                    <Key frame="542" value="-6.41369" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="2.11181" />
                    <Key frame="96" value="1.0571" />
                    <Key frame="126" value="1.58446" />
                    <Key frame="150" value="1.58446" />
                    <Key frame="203" value="10.9889" />
                    <Key frame="235" value="20.7449" />
                    <Key frame="268" value="18.196" />
                    <Key frame="305" value="15.8229" />
                    <Key frame="337" value="19.9538" />
                    <Key frame="376" value="-22.41" />
                    <Key frame="409" value="-20.2127" />
                    <Key frame="430" value="-24.0799" />
                    <Key frame="458" value="-17.3123" />
                    <Key frame="483" value="-19.2" />
                    <Key frame="512" value="-12.9177" />
                    <Key frame="542" value="-4.04062" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="-38.7627" />
                    <Key frame="96" value="-36.9169" />
                    <Key frame="126" value="-46.4971" />
                    <Key frame="150" value="-46.7608" />
                    <Key frame="203" value="-4.22121" />
                    <Key frame="235" value="9.31412" />
                    <Key frame="268" value="8.96255" />
                    <Key frame="305" value="9.84147" />
                    <Key frame="337" value="10.9841" />
                    <Key frame="376" value="10.4567" />
                    <Key frame="409" value="-41.2236" />
                    <Key frame="430" value="-46.2335" />
                    <Key frame="458" value="-54.9347" />
                    <Key frame="483" value="-36.7411" />
                    <Key frame="512" value="-3.43018" />
                    <Key frame="542" value="11.072" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="14.5045" />
                    <Key frame="96" value="-5.29" />
                    <Key frame="126" value="-4.74375" />
                    <Key frame="150" value="-4.91953" />
                    <Key frame="203" value="-5.29" />
                    <Key frame="235" value="-5.2711" />
                    <Key frame="268" value="-5.29" />
                    <Key frame="305" value="-4.91953" />
                    <Key frame="337" value="-5.18321" />
                    <Key frame="376" value="-5.29" />
                    <Key frame="409" value="98.0017" />
                    <Key frame="430" value="120.854" />
                    <Key frame="458" value="120.678" />
                    <Key frame="483" value="93.6071" />
                    <Key frame="512" value="-1.66754" />
                    <Key frame="542" value="-4.2164" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="7.38531" />
                    <Key frame="96" value="17.7565" />
                    <Key frame="126" value="24.2605" />
                    <Key frame="150" value="24.3484" />
                    <Key frame="203" value="10.3736" />
                    <Key frame="235" value="5.27591" />
                    <Key frame="268" value="4.13332" />
                    <Key frame="305" value="3.78175" />
                    <Key frame="337" value="3.07861" />
                    <Key frame="376" value="5.27591" />
                    <Key frame="395" value="-11.9" />
                    <Key frame="409" value="-7.90785" />
                    <Key frame="430" value="-25.8378" />
                    <Key frame="458" value="-44.4708" />
                    <Key frame="483" value="-36.8242" />
                    <Key frame="512" value="7.29742" />
                    <Key frame="542" value="3.69386" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                    <Key frame="47" value="2.02391" />
                    <Key frame="96" value="4.22121" />
                    <Key frame="126" value="4.39699" />
                    <Key frame="150" value="4.39699" />
                    <Key frame="203" value="-3.77694" />
                    <Key frame="235" value="-15.5544" />
                    <Key frame="268" value="-21.0916" />
                    <Key frame="305" value="-21.4432" />
                    <Key frame="337" value="-15.4665" />
                    <Key frame="376" value="18.1081" />
                    <Key frame="409" value="14.0651" />
                    <Key frame="430" value="6.50639" />
                    <Key frame="458" value="6.59428" />
                    <Key frame="483" value="14.153" />
                    <Key frame="512" value="12.6588" />
                    <Key frame="542" value="3.86964" />
                </ActuatorCurve>
            </ActuatorList>
        </Timeline>
        <Resource name="Standing" type="Lock" timeout="1" />
        <Resource name="Left eye leds" type="Lock" timeout="1" />
        <Resource name="Right eye leds" type="Lock" timeout="1" />
        <Resource name="All motors" type="Lock" timeout="1" />
    </Box>
</ChoregrapheProject>
